package cars.com;
dialect "mvel"

import cars.com.Car
import cars.com.CarCategory
import org.joda.time.Days;

rule "init"
when
then
    CarCategory categoryA = new CarCategory(CarCategory.CATEGORY.A, 59, 69, 10, 10);
    CarCategory categoryB = new CarCategory(CarCategory.CATEGORY.B, 69, 79, 10, 10);
    CarCategory categoryD = new CarCategory(CarCategory.CATEGORY.D, 79, 89, 10, 10);
    insert(new Car(categoryA));
    insert(new Car(categoryA));
    insert(new Car(categoryB));
    insert(new Car(categoryD));
    insert(new Car(categoryD));
end

rule "rent"
salience(-rental.getRentalStart().getMillis())
 when
    rental : Rental();
    car : Car(available == true && carCategory.getCat() == rental.categoryPrefernce);
 then
    car.setAvailable(false);
    System.out.println("wyp " + rental);
    System.out.println("car: kat:" + car.carCategory +" id:"+ String.valueOf(car.getId())+"\n");
    car.addRental(rental);
    rental.setCar(car);
    retract(rental);
end
rule "changePreferencesAB"
salience(-rental.getRentalStart().getMillis()+1)
when
    rental : Rental(categoryPrefernce == CarCategory.CATEGORY.A);
 then
    System.out.println("no car A");
    modify(rental){ categoryPrefernce = CarCategory.CATEGORY.B}
end

rule "changePreferencesBD"
salience(-rental.getRentalStart().getMillis()+1)
when
    rental : Rental(categoryPrefernce == CarCategory.CATEGORY.B);
 then
   System.out.println("no car B");
   modify(rental){ categoryPrefernce = CarCategory.CATEGORY.D}
end
rule "changePreferencesDNull"
salience(-rental.getRentalStart().getMillis()+1)
when
    rental : Rental(categoryPrefernce == CarCategory.CATEGORY.A);
 then
    System.out.println("no car D");
    modify(rental){ categoryPrefernce = null}
end
rule "noCars"
salience(-rental.getRentalStart().getMillis()+1)
when
    rental : Rental(categoryPrefernce == null)
   then
    System.out.println("no car");
    retract(rental)
end


rule "ret"
salience(-ret.getRentalEnd().getMillis())
 when
    ret : Return(rental.getCar() != null);
 then
    System.out.println("zwrot " + ret);
    System.out.println(ret.getRental().getCar().toString());
    Client client = ret.getRental().getClient();
    client.addPayment(ret.kilometersDriven);
    client.addPayment(ret.getRental().getWantBabyCarrier() ? ret.getRental().getCar().getCarCategory().getBabyCarrierPrice() : 0);
    client.addPayment(ret.getRental().getWantBikeSupport() ? ret.getRental().getCar().getCarCategory().getBikeSupportPrice() : 0);
    client.addPayment(ret.getLostBusbyCount() * 20);
    client.addPayment(ret.getLackOfRegistrationCertificate()? 500 : 0);
    client.addPayment(Days.daysBetween(ret.getRentalEnd(),ret.getRental().getRentalPredictedDate()).getDays());
    retract(ret);
end

